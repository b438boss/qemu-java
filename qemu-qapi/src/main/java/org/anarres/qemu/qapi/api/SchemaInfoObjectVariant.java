package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiTypeDescriptor{name=SchemaInfoObjectVariant, data={case=str, type=str}, innerTypes=null}</pre>
 */
// QApiTypeDescriptor{name=SchemaInfoObjectVariant, data={case=str, type=str}, innerTypes=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class SchemaInfoObjectVariant extends QApiType {

	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("case")
	@Nonnull
	public java.lang.String _case;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("type")
	@Nonnull
	public java.lang.String type;

	@Nonnull
	public SchemaInfoObjectVariant with_case(java.lang.String value) {
		this._case = value;
		return this;
	}

	@Nonnull
	public SchemaInfoObjectVariant withType(java.lang.String value) {
		this.type = value;
		return this;
	}

	public SchemaInfoObjectVariant() {
	}

	public SchemaInfoObjectVariant(java.lang.String _case, java.lang.String type) {
		this._case = _case;
		this.type = type;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("case");
		names.add("type");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("case".equals(name))
			return _case;
		if ("type".equals(name))
			return type;
		return super.getFieldByName(name);
	}
}
