package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiCommandDescriptor{name=block_set_io_throttle, returns=null, data={device=str, bps=int, bps_rd=int, bps_wr=int, iops=int, iops_rd=int, iops_wr=int, *bps_max=int, *bps_rd_max=int, *bps_wr_max=int, *iops_max=int, *iops_rd_max=int, *iops_wr_max=int, *iops_size=int}}</pre>
 */
// QApiCommandDescriptor{name=block_set_io_throttle, returns=null, data={device=str, bps=int, bps_rd=int, bps_wr=int, iops=int, iops_rd=int, iops_wr=int, *bps_max=int, *bps_rd_max=int, *bps_wr_max=int, *iops_max=int, *iops_rd_max=int, *iops_wr_max=int, *iops_size=int}}
public class BlockSetIoThrottleCommand extends QApiCommand<BlockSetIoThrottleCommand.Arguments, BlockSetIoThrottleCommand.Response> {
	/** Compound arguments to a BlockSetIoThrottleCommand. */
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public static class Arguments {

		@JsonProperty("device")
		@Nonnull
		public java.lang.String device;
		@JsonProperty("bps")
		@Nonnull
		public long bps;
		@JsonProperty("bps_rd")
		@Nonnull
		public long bpsRd;
		@JsonProperty("bps_wr")
		@Nonnull
		public long bpsWr;
		@JsonProperty("iops")
		@Nonnull
		public long iops;
		@JsonProperty("iops_rd")
		@Nonnull
		public long iopsRd;
		@JsonProperty("iops_wr")
		@Nonnull
		public long iopsWr;
		@JsonProperty("bps_max")
		@CheckForNull
		public java.lang.Long bpsMax;
		@JsonProperty("bps_rd_max")
		@CheckForNull
		public java.lang.Long bpsRdMax;
		@JsonProperty("bps_wr_max")
		@CheckForNull
		public java.lang.Long bpsWrMax;
		@JsonProperty("iops_max")
		@CheckForNull
		public java.lang.Long iopsMax;
		@JsonProperty("iops_rd_max")
		@CheckForNull
		public java.lang.Long iopsRdMax;
		@JsonProperty("iops_wr_max")
		@CheckForNull
		public java.lang.Long iopsWrMax;
		@JsonProperty("iops_size")
		@CheckForNull
		public java.lang.Long iopsSize;

		public Arguments() {
		}

		public Arguments(java.lang.String device, long bps, long bpsRd, long bpsWr, long iops, long iopsRd, long iopsWr, java.lang.Long bpsMax, java.lang.Long bpsRdMax, java.lang.Long bpsWrMax, java.lang.Long iopsMax, java.lang.Long iopsRdMax, java.lang.Long iopsWrMax, java.lang.Long iopsSize) {
			this.device = device;
			this.bps = bps;
			this.bpsRd = bpsRd;
			this.bpsWr = bpsWr;
			this.iops = iops;
			this.iopsRd = iopsRd;
			this.iopsWr = iopsWr;
			this.bpsMax = bpsMax;
			this.bpsRdMax = bpsRdMax;
			this.bpsWrMax = bpsWrMax;
			this.iopsMax = iopsMax;
			this.iopsRdMax = iopsRdMax;
			this.iopsWrMax = iopsWrMax;
			this.iopsSize = iopsSize;
		}
	}

	/** Response to a BlockSetIoThrottleCommand. */
	public static class Response extends QApiResponse<java.lang.Void> {
	}

	/** Constructs a new BlockSetIoThrottleCommand. */
	public BlockSetIoThrottleCommand(@Nonnull BlockSetIoThrottleCommand.Arguments argument) {
		super("block_set_io_throttle", Response.class, argument);
	}

	/** Constructs a new BlockSetIoThrottleCommand. */
	public BlockSetIoThrottleCommand(java.lang.String device, long bps, long bpsRd, long bpsWr, long iops, long iopsRd, long iopsWr, java.lang.Long bpsMax, java.lang.Long bpsRdMax, java.lang.Long bpsWrMax, java.lang.Long iopsMax, java.lang.Long iopsRdMax, java.lang.Long iopsWrMax, java.lang.Long iopsSize) {
		this(new Arguments(device, bps, bpsRd, bpsWr, iops, iopsRd, iopsWr, bpsMax, bpsRdMax, bpsWrMax, iopsMax, iopsRdMax, iopsWrMax, iopsSize));
	}
}
