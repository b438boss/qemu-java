package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiTypeDescriptor{name=Memdev, data={size=size, merge=bool, dump=bool, prealloc=bool, host-nodes=[uint16], policy=HostMemPolicy}, innerTypes=null}</pre>
 */
// QApiTypeDescriptor{name=Memdev, data={size=size, merge=bool, dump=bool, prealloc=bool, host-nodes=[uint16], policy=HostMemPolicy}, innerTypes=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class Memdev extends QApiType {

	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("size")
	@Nonnull
	public long size;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("merge")
	@Nonnull
	public boolean merge;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("dump")
	@Nonnull
	public boolean dump;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("prealloc")
	@Nonnull
	public boolean prealloc;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("host-nodes")
	@Nonnull
	public java.util.List<java.lang.Integer> hostNodes;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("policy")
	@Nonnull
	public HostMemPolicy policy;

	@Nonnull
	public Memdev withSize(long value) {
		this.size = value;
		return this;
	}

	@Nonnull
	public Memdev withMerge(boolean value) {
		this.merge = value;
		return this;
	}

	@Nonnull
	public Memdev withDump(boolean value) {
		this.dump = value;
		return this;
	}

	@Nonnull
	public Memdev withPrealloc(boolean value) {
		this.prealloc = value;
		return this;
	}

	@Nonnull
	public Memdev withHostNodes(java.util.List<java.lang.Integer> value) {
		this.hostNodes = value;
		return this;
	}

	@Nonnull
	public Memdev withPolicy(HostMemPolicy value) {
		this.policy = value;
		return this;
	}

	public Memdev() {
	}

	public Memdev(long size, boolean merge, boolean dump, boolean prealloc, java.util.List<java.lang.Integer> hostNodes, HostMemPolicy policy) {
		this.size = size;
		this.merge = merge;
		this.dump = dump;
		this.prealloc = prealloc;
		this.hostNodes = hostNodes;
		this.policy = policy;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("size");
		names.add("merge");
		names.add("dump");
		names.add("prealloc");
		names.add("host-nodes");
		names.add("policy");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("size".equals(name))
			return size;
		if ("merge".equals(name))
			return merge;
		if ("dump".equals(name))
			return dump;
		if ("prealloc".equals(name))
			return prealloc;
		if ("host-nodes".equals(name))
			return hostNodes;
		if ("policy".equals(name))
			return policy;
		return super.getFieldByName(name);
	}
}
