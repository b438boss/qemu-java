package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=BlockdevOptionsRaw, data={*offset=int, *size=int}, innerTypes=null, fields=null, base=BlockdevOptionsGenericFormat}</pre>
 */
// QApiStructDescriptor{name=BlockdevOptionsRaw, data={*offset=int, *size=int}, innerTypes=null, fields=null, base=BlockdevOptionsGenericFormat}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BlockdevOptionsRaw extends BlockdevOptionsGenericFormat {

	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("offset")
	@CheckForNull
	public java.lang.Long offset;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("size")
	@CheckForNull
	public java.lang.Long size;

	@Nonnull
	public BlockdevOptionsRaw withOffset(java.lang.Long value) {
		this.offset = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsRaw withSize(java.lang.Long value) {
		this.size = value;
		return this;
	}

	public BlockdevOptionsRaw() {
	}

	public BlockdevOptionsRaw(java.lang.Long offset, java.lang.Long size) {
		this.offset = offset;
		this.size = size;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("offset");
		names.add("size");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("offset".equals(name))
			return offset;
		if ("size".equals(name))
			return size;
		return super.getFieldByName(name);
	}
}
