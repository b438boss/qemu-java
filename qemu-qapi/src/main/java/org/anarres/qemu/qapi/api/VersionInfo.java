package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiTypeDescriptor{name=VersionInfo, data={qemu={major=int, minor=int, micro=int}, package=str}, innerTypes=null}</pre>
 */
// QApiTypeDescriptor{name=VersionInfo, data={qemu={major=int, minor=int, micro=int}, package=str}, innerTypes=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class VersionInfo extends QApiType {
	// QApiTypeDescriptor{name=_Tqemu, data={major=int, minor=int, micro=int}, innerTypes=[]}
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public static class _Tqemu {
		@JsonProperty("major")
		@Nonnull
		public long major;
		@JsonProperty("minor")
		@Nonnull
		public long minor;
		@JsonProperty("micro")
		@Nonnull
		public long micro;
	}

	@JsonProperty("qemu")
	@Nonnull
	public _Tqemu qemu;
	@JsonProperty("package")
	@Nonnull
	public java.lang.String _package;

	@Nonnull
	public VersionInfo withQemu(_Tqemu value) {
		this.qemu = value;
		return this;
	}

	@Nonnull
	public VersionInfo with_package(java.lang.String value) {
		this._package = value;
		return this;
	}

	public VersionInfo() {
	}

	public VersionInfo(_Tqemu qemu, java.lang.String _package) {
		this.qemu = qemu;
		this._package = _package;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("qemu");
		names.add("package");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("qemu".equals(name))
			return qemu;
		if ("package".equals(name))
			return _package;
		return super.getFieldByName(name);
	}
}
