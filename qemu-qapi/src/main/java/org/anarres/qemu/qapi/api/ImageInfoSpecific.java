package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiUnionDescriptor{name=ImageInfoSpecific, discrinimator=null, data={qcow2=ImageInfoSpecificQCow2, vmdk=ImageInfoSpecificVmdk}, innerTypes=null, fields=null, discriminatorField=null}</pre>
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class ImageInfoSpecific extends QApiType implements QApiUnion {
	public static enum Discriminator {
		qcow2,
		vmdk,
		__NONE;
	}

	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@Nonnull
	@JsonProperty("type")
	public Discriminator type;

	@Nonnull
	public final Discriminator getType() {
		return type;
	}

	// union {
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("qcow2")
	@JsonUnwrapped
	@CheckForNull
	public ImageInfoSpecificQCow2 qcow2;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("vmdk")
	@JsonUnwrapped
	@CheckForNull
	public ImageInfoSpecificVmdk vmdk;
	// }

	@Nonnull
	public static ImageInfoSpecific qcow2(@Nonnull ImageInfoSpecificQCow2 qcow2) {
		ImageInfoSpecific self = new ImageInfoSpecific();
		self.type = Discriminator.qcow2;
		self.qcow2 = qcow2;
		return self;
	}

	@Nonnull
	public static ImageInfoSpecific vmdk(@Nonnull ImageInfoSpecificVmdk vmdk) {
		ImageInfoSpecific self = new ImageInfoSpecific();
		self.type = Discriminator.vmdk;
		self.vmdk = vmdk;
		return self;
	}

	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("qcow2");
		names.add("vmdk");
		return names;
	}

	@JsonIgnore
	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("qcow2".equals(name))
			return qcow2;
		if ("vmdk".equals(name))
			return vmdk;
		return super.getFieldByName(name);
	}

	@Override
	@JsonIgnore
	public boolean isValidUnion() {
		int count = 0;
		if (qcow2 != null)
			count++;
		if (vmdk != null)
			count++;
		return (count == 1);
	}
}
