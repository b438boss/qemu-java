package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiTypeDescriptor{name=BlockdevBackup, data={device=str, target=str, sync=MirrorSyncMode, *speed=int, *on-source-error=BlockdevOnError, *on-target-error=BlockdevOnError}, innerTypes=null}</pre>
 */
// QApiTypeDescriptor{name=BlockdevBackup, data={device=str, target=str, sync=MirrorSyncMode, *speed=int, *on-source-error=BlockdevOnError, *on-target-error=BlockdevOnError}, innerTypes=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BlockdevBackup extends QApiType {

	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("device")
	@Nonnull
	public java.lang.String device;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("target")
	@Nonnull
	public java.lang.String target;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("sync")
	@Nonnull
	public MirrorSyncMode sync;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("speed")
	@CheckForNull
	public java.lang.Long speed;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("on-source-error")
	@CheckForNull
	public BlockdevOnError onSourceError;
	@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
	@JsonProperty("on-target-error")
	@CheckForNull
	public BlockdevOnError onTargetError;

	@Nonnull
	public BlockdevBackup withDevice(java.lang.String value) {
		this.device = value;
		return this;
	}

	@Nonnull
	public BlockdevBackup withTarget(java.lang.String value) {
		this.target = value;
		return this;
	}

	@Nonnull
	public BlockdevBackup withSync(MirrorSyncMode value) {
		this.sync = value;
		return this;
	}

	@Nonnull
	public BlockdevBackup withSpeed(java.lang.Long value) {
		this.speed = value;
		return this;
	}

	@Nonnull
	public BlockdevBackup withOnSourceError(BlockdevOnError value) {
		this.onSourceError = value;
		return this;
	}

	@Nonnull
	public BlockdevBackup withOnTargetError(BlockdevOnError value) {
		this.onTargetError = value;
		return this;
	}

	public BlockdevBackup() {
	}

	public BlockdevBackup(java.lang.String device, java.lang.String target, MirrorSyncMode sync, java.lang.Long speed, BlockdevOnError onSourceError, BlockdevOnError onTargetError) {
		this.device = device;
		this.target = target;
		this.sync = sync;
		this.speed = speed;
		this.onSourceError = onSourceError;
		this.onTargetError = onTargetError;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("device");
		names.add("target");
		names.add("sync");
		names.add("speed");
		names.add("on-source-error");
		names.add("on-target-error");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("device".equals(name))
			return device;
		if ("target".equals(name))
			return target;
		if ("sync".equals(name))
			return sync;
		if ("speed".equals(name))
			return speed;
		if ("on-source-error".equals(name))
			return onSourceError;
		if ("on-target-error".equals(name))
			return onTargetError;
		return super.getFieldByName(name);
	}
}
