package $packageName;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

#parse("/velocity/header.vm")
// $element
public class $element.className extends QApiCommand<$element.argumentTypeNameWrapped, ${element.className}.Response> {
#if ($element.argumentType)
	/** Compound arguments to a ${element.className}. */
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public static class $element.argumentType.className {

#foreach ($field in $element.argumentType.fields)
		@SuppressFBWarnings("NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR")
		@JsonProperty("$field.serializedName")
		$field.annotations
		public $field.typeName $field.name;
#end

		public ${element.argumentType.className}() {
		}

		public ${element.argumentType.className}(#{foreach} ($field in $element.argumentType.fields)#{if} ($velocityCount > 1), #{end}$field.typeName $field.name#{end}) {
#foreach ($field in $element.argumentType.fields)
			this.$field.name = $field.name;
#end
		}
	}
#end

	/** Response to a ${element.className}. */
	public static class Response extends QApiResponse<$element.returnTypeNameWrapped> {
	}

	/** Constructs a new ${element.className}. */
	public ${element.className}(#{if} ($element.argumentTypeName)@Nonnull $element.argumentTypeName argument#{end}) {
		super("$element.name", Response.class, #{if} ($element.argumentTypeName)argument#{else}null#{end});
	}

#if ($element.argumentType)
	/** Constructs a new ${element.className}. */
	public ${element.className}(#{foreach} ($field in $element.argumentType.fields)#{if} ($velocityCount > 1), #{end}$field.typeName $field.name#{end}) {
		this(new ${element.argumentType.className}(#{foreach} ($field in $element.argumentType.fields)#{if} ($velocityCount > 1), #{end}$field.name#{end}));
	}
#end
}
